{"version":3,"file":"gcoord.esm.js","sources":["../src/constants.js","../src/helper.js","../src/crs/GCJ02.js","../src/crs/BD09.js","../src/crs/EPSG3857.js","../src/crs/index.js","../src/transform.js","../src/index.js"],"sourcesContent":["export const WGS84 = 'WGS84';\r\nexport const WGS1984 = WGS84;\r\nexport const GCJ02 = 'GCJ02';\r\nexport const BD09 = 'BD09';\r\nexport const EPSG4326 = WGS84;\r\nexport const EPSG3857 = 'EPSG3857';\r\nexport const EPSG900913 = EPSG3857;\r\n\r\nexport const Baidu = BD09;\r\nexport const BMap = BD09;\r\nexport const AMap = GCJ02;\r\n\r\nexport const WebMercator = EPSG3857;\r\n","export function assert( condition, msg ) {\r\n    if ( condition ) throw new Error( msg );\r\n}\r\n\r\n/**\r\n * isNumber\r\n *\r\n * @param {*} num Number to validate\r\n * @returns {boolean} true/false\r\n * @example\r\n * gcoord.isNumber(123)\r\n * //=true\r\n * gcoord.isNumber('foo')\r\n * //=false\r\n */\r\nexport function isNumber( num ) {\r\n    return !isNaN( num ) && num !== null && !isArray( num );\r\n}\r\n\r\n/**\r\n * isObject\r\n *\r\n * @param {*} input variable to validate\r\n * @returns {boolean} true/false\r\n * @example\r\n * gcoord.isObject({elevation: 10})\r\n * //=true\r\n * gcoord.isObject('foo')\r\n * //=false\r\n */\r\nexport function isObject( input ) {\r\n    return ( !!input ) && ( input.constructor === Object );\r\n}\r\n\r\n/**\r\n * isNumber\r\n *\r\n * @param {*} input variable to validate\r\n * @returns {boolean} true/false\r\n */\r\nexport function isArray( input ) {\r\n    return ( !!input ) && Object.prototype.toString.call( input ) === '[object Array]'\r\n}\r\n\r\n/**\r\n * compose\r\n *\r\n * @param {function} function\r\n * @returns {function}\r\n */\r\nexport function compose() {\r\n    const args = arguments;\r\n    const start = args.length - 1;\r\n    return function () {\r\n        let i = start;\r\n        let result = args[ start ].apply( this, arguments );\r\n        while ( i-- ) result = args[ i ].call( this, result );\r\n        return result;\r\n    };\r\n};\r\n\r\n/**\r\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\r\n * https://github.com/Turfjs/turf/blob/master/packages/turf-meta/index.mjs\r\n *\r\n * @name coordEach\r\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\r\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\r\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\r\n * @returns {void}\r\n * @example\r\n * let features = gcoord.featureCollection([\r\n *   gcoord.point([26, 37], {\"foo\": \"bar\"}),\r\n *   gcoord.point([36, 53], {\"hello\": \"world\"})\r\n * ]);\r\n *\r\n * gcoord.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\r\n *   //=currentCoord\r\n *   //=coordIndex\r\n *   //=featureIndex\r\n *   //=multiFeatureIndex\r\n *   //=geometryIndex\r\n * });\r\n */\r\nexport function coordEach( geojson, callback, excludeWrapCoord ) {\r\n    // Handles null Geometry -- Skips this GeoJSON\r\n    if ( geojson === null ) return;\r\n    /* eslint-disable-next-line */\r\n    let j, k, l, geometry, stopG, coords,\r\n        geometryMaybeCollection,\r\n        wrapShrink = 0,\r\n        coordIndex = 0,\r\n        isGeometryCollection;\r\n\r\n    const type = geojson.type;\r\n    const isFeatureCollection = type === 'FeatureCollection';\r\n    const isFeature = type === 'Feature';\r\n    const stop = isFeatureCollection ? geojson.features.length : 1;\r\n\r\n    // This logic may look a little weird. The reason why it is that way\r\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\r\n    // of objects at its root: FeatureCollection, Features, Geometries.\r\n    // This function has the responsibility of handling all of them, and that\r\n    // means that some of the `for` loops you see below actually just don't apply\r\n    // to certain inputs. For instance, if you give this just a\r\n    // Point geometry, then both loops are short-circuited and all we do\r\n    // is gradually rename the input until it's called 'geometry'.\r\n    //\r\n    // This also aims to allocate as few resources as possible: just a\r\n    // few numbers and booleans, rather than any temporary arrays as would\r\n    // be required with the normalization approach.\r\n    for ( let featureIndex = 0; featureIndex < stop; featureIndex++ ) {\r\n        geometryMaybeCollection = ( isFeatureCollection ? geojson.features[ featureIndex ].geometry\r\n            : ( isFeature ? geojson.geometry : geojson ) );\r\n        isGeometryCollection = ( geometryMaybeCollection ) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\r\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\r\n\r\n        for ( let geomIndex = 0; geomIndex < stopG; geomIndex++ ) {\r\n            let multiFeatureIndex = 0;\r\n            let geometryIndex = 0;\r\n            geometry = isGeometryCollection\r\n                ? geometryMaybeCollection.geometries[ geomIndex ] : geometryMaybeCollection;\r\n\r\n            // Handles null Geometry -- Skips this geometry\r\n            if ( geometry === null ) continue;\r\n            coords = geometry.coordinates;\r\n            const geomType = geometry.type;\r\n\r\n            wrapShrink = ( excludeWrapCoord && ( geomType === 'Polygon' || geomType === 'MultiPolygon' ) ) ? 1 : 0;\r\n            switch ( geomType ) {\r\n                case null:\r\n                    break;\r\n                case 'Point':\r\n                    if ( callback( coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex ) === false ) return false;\r\n                    coordIndex++;\r\n                    multiFeatureIndex++;\r\n                    break;\r\n                case 'LineString':\r\n                case 'MultiPoint':\r\n                    for ( j = 0; j < coords.length; j++ ) {\r\n                        if ( callback( coords[ j ], coordIndex, featureIndex, multiFeatureIndex, geometryIndex ) === false ) return false;\r\n                        coordIndex++;\r\n                        if ( geomType === 'MultiPoint' ) multiFeatureIndex++;\r\n                    }\r\n                    if ( geomType === 'LineString' ) multiFeatureIndex++;\r\n                    break;\r\n                case 'Polygon':\r\n                case 'MultiLineString':\r\n                    for ( j = 0; j < coords.length; j++ ) {\r\n                        for ( k = 0; k < coords[ j ].length - wrapShrink; k++ ) {\r\n                            if ( callback( coords[ j ][ k ], coordIndex, featureIndex, multiFeatureIndex, geometryIndex ) === false ) return false;\r\n                            coordIndex++;\r\n                        }\r\n                        if ( geomType === 'MultiLineString' ) multiFeatureIndex++;\r\n                        if ( geomType === 'Polygon' ) geometryIndex++;\r\n                    }\r\n                    if ( geomType === 'Polygon' ) multiFeatureIndex++;\r\n                    break;\r\n                case 'MultiPolygon':\r\n                    for ( j = 0; j < coords.length; j++ ) {\r\n                        geometryIndex = 0;\r\n                        for ( k = 0; k < coords[ j ].length; k++ ) {\r\n                            for ( l = 0; l < coords[ j ][ k ].length - wrapShrink; l++ ) {\r\n                                if ( callback( coords[ j ][ k ][ l ], coordIndex, featureIndex, multiFeatureIndex, geometryIndex ) === false ) return false;\r\n                                coordIndex++;\r\n                            }\r\n                            geometryIndex++;\r\n                        }\r\n                        multiFeatureIndex++;\r\n                    }\r\n                    break;\r\n                case 'GeometryCollection':\r\n                    for ( j = 0; j < geometry.geometries.length; j++ ) { if ( coordEach( geometry.geometries[ j ], callback, excludeWrapCoord ) === false ) return false; }\r\n                    break;\r\n                default:\r\n                    throw new Error( 'Unknown Geometry Type' );\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {\r\n    assert,\r\n    isNumber\r\n} from '../helper.js'\r\n\r\nconst { sin, cos, sqrt, abs, PI } = Math;\r\n\r\nconst a = 6378245;\r\nconst ee = 0.006693421622965823;\r\n\r\nexport function GCJ02ToWGS84( coord ) {\r\n\r\n    const [ lon, lat ] = coord;\r\n\r\n    if ( !isInChina( lon, lat ) ) return [ lon, lat ];\r\n\r\n    let [ wgsLon, wgsLat ] = [ lon, lat ];\r\n\r\n    let tempPoint = WGS84ToGCJ02( [ wgsLon, wgsLat ] );\r\n\r\n    let dx = tempPoint[ 0 ] - lon;\r\n    let dy = tempPoint[ 1 ] - lat;\r\n\r\n    while ( abs( dx ) > 1e-6 || abs( dy ) > 1e-6 ) {\r\n        wgsLon -= dx;\r\n        wgsLat -= dy;\r\n\r\n        tempPoint = WGS84ToGCJ02( [ wgsLon, wgsLat ] );\r\n        dx = tempPoint[ 0 ] - lon;\r\n        dy = tempPoint[ 1 ] - lat;\r\n    }\r\n\r\n    return [ wgsLon, wgsLat ];\r\n}\r\n\r\nexport function WGS84ToGCJ02( coord ) {\r\n\r\n    const [ lon, lat ] = coord;\r\n\r\n    if ( !isInChina( lon, lat ) ) return [ lon, lat ];\r\n\r\n    const d = delta( lon, lat );\r\n\r\n    return [ lon + d[ 0 ], lat + d[ 1 ] ];\r\n\r\n}\r\n\r\nfunction transformLat( x, y ) {\r\n    let ret = -100 + 2 * x + 3 * y + 0.2 * y * y + 0.1 * x * y + 0.2 * sqrt( abs( x ) );\r\n    ret += ( 20 * sin( 6 * x * PI ) + 20 * sin( 2 * x * PI ) ) * 2 / 3;\r\n    ret += ( 20 * sin( y * PI ) + 40 * sin( y / 3 * PI ) ) * 2 / 3;\r\n    ret += ( 160 * sin( y / 12 * PI ) + 320 * sin( y * PI / 30 ) ) * 2 / 3;\r\n    return ret;\r\n}\r\n\r\nfunction transformLon( x, y ) {\r\n    let ret = 300 + x + 2 * y + 0.1 * x * x + 0.1 * x * y + 0.1 * sqrt( abs( x ) );\r\n    ret += ( 20 * sin( 6 * x * PI ) + 20 * sin( 2 * x * PI ) ) * 2 / 3;\r\n    ret += ( 20 * sin( x * PI ) + 40 * sin( x / 3 * PI ) ) * 2 / 3;\r\n    ret += ( 150 * sin( x / 12 * PI ) + 300 * sin( x / 30 * PI ) ) * 2 / 3;\r\n    return ret;\r\n}\r\n\r\nfunction delta( lon, lat ) {\r\n\r\n    let dLon = transformLon( lon - 105, lat - 35 );\r\n    let dLat = transformLat( lon - 105, lat - 35 );\r\n\r\n    const radLat = lat / 180 * PI;\r\n    let magic = sin( radLat );\r\n\r\n    magic = 1 - ee * magic * magic;\r\n\r\n    const sqrtMagic = sqrt( magic );\r\n    dLon = ( dLon * 180 ) / ( a / sqrtMagic * cos( radLat ) * PI );\r\n    dLat = ( dLat * 180 ) / ( ( a * ( 1 - ee ) ) / ( magic * sqrtMagic ) * PI );\r\n\r\n    return [ dLon, dLat ];\r\n}\r\n\r\nfunction isInChina( lon, lat ) {\r\n    assert( lon === undefined || lat === undefined, 'lon and lat are required' );\r\n    assert( !isNumber( lon ) || !isNumber( lat ), 'lon and lat must be numbers' );\r\n\r\n    return lon >= 72.004 && lon <= 137.8347 && lat >= 0.8293 && lat <= 55.8271;\r\n}\r\n","const { sin, cos, atan2, sqrt, PI } = Math;\n\nconst baiduFactor = PI * 3000.0 / 180.0;\n\nexport function BD09ToGCJ02( coord ) {\n\n    const [ lon, lat ] = coord;\n\n    const x = lon - 0.0065;\n    const y = lat - 0.006;\n    const z = sqrt( x * x + y * y ) - 0.00002 * sin( y * baiduFactor );\n    const theta = atan2( y, x ) - 0.000003 * cos( x * baiduFactor );\n    const newLon = z * cos( theta );\n    const newLat = z * sin( theta );\n\n    return [ newLon, newLat ];\n}\n\nexport function GCJ02ToBD09( coord ) {\n\n    const [ lon, lat ] = coord;\n\n    const x = lon;\n    const y = lat;\n    const z = sqrt( x * x + y * y ) + 0.00002 * sin( y * baiduFactor );\n    const theta = atan2( y, x ) + 0.000003 * cos( x * baiduFactor );\n\n    const newLon = z * cos( theta ) + 0.0065;\n    const newLat = z * sin( theta ) + 0.006;\n\n    return [ newLon, newLat ];\n\n}\n","// https://github.com/Turfjs/turf/blob/master/packages/turf-projection/index.ts\r\n\r\nconst R2D = 180 / Math.PI;\r\nconst D2R = Math.PI / 180;\r\nconst A = 6378137.0;\r\nconst MAXEXTENT = 20037508.342789244;\r\n\r\nexport function ESPG3857ToWGS84( xy ) {\r\n    return [\r\n        ( xy[ 0 ] * R2D / A ),\r\n        ( ( Math.PI * 0.5 ) - 2.0 * Math.atan( Math.exp( -xy[ 1 ] / A ) ) ) * R2D\r\n    ];\r\n}\r\n\r\nexport function WGS84ToEPSG3857( lonLat ) {\r\n    // compensate longitudes passing the 180th meridian\r\n    // from https://github.com/proj4js/proj4js/blob/master/lib/common/adjust_lon.js\r\n    const adjusted = ( Math.abs( lonLat[ 0 ] ) <= 180 ) ? lonLat[ 0 ] : ( lonLat[ 0 ] - ( ( lonLat[ 0 ] < 0 ? -1 : 1 ) * 360 ) );\r\n    const xy = [\r\n        A * adjusted * D2R,\r\n        A * Math.log( Math.tan( ( Math.PI * 0.25 ) + ( 0.5 * lonLat[ 1 ] * D2R ) ) )\r\n    ];\r\n\r\n    // if xy value is beyond maxextent (e.g. poles), return maxextent\r\n    if ( xy[ 0 ] > MAXEXTENT ) xy[ 0 ] = MAXEXTENT;\r\n    if ( xy[ 0 ] < -MAXEXTENT ) xy[ 0 ] = -MAXEXTENT;\r\n    if ( xy[ 1 ] > MAXEXTENT ) xy[ 1 ] = MAXEXTENT;\r\n    if ( xy[ 1 ] < -MAXEXTENT ) xy[ 1 ] = -MAXEXTENT;\r\n\r\n    return xy;\r\n}\r\n","import { GCJ02ToWGS84, WGS84ToGCJ02 } from './GCJ02.js'\nimport { BD09ToGCJ02, GCJ02ToBD09 } from './BD09.js'\nimport { ESPG3857ToWGS84, WGS84ToEPSG3857 } from './EPSG3857.js'\nimport { compose } from '../helper.js'\n\nconst WGS84 = {\n    to: {\n        GCJ02: WGS84ToGCJ02,\n        BD09: compose( GCJ02ToBD09, WGS84ToGCJ02 ),\n        EPSG3857: WGS84ToEPSG3857,\n    }\n}\n\nconst GCJ02 = {\n    to: {\n        WGS84: GCJ02ToWGS84,\n        BD09: GCJ02ToBD09,\n        EPSG3857: compose( WGS84ToEPSG3857, GCJ02ToWGS84 ),\n    }\n}\n\nconst BD09 = {\n    to: {\n        WGS84: compose( GCJ02ToWGS84, BD09ToGCJ02 ),\n        GCJ02: BD09ToGCJ02,\n        EPSG3857: compose( WGS84ToEPSG3857, GCJ02ToWGS84, BD09ToGCJ02 ),\n    }\n}\n\nconst EPSG3857 = {\n    to: {\n        WGS84: ESPG3857ToWGS84,\n        GCJ02: compose( WGS84ToGCJ02, ESPG3857ToWGS84 ),\n        BD09: compose( GCJ02ToBD09, WGS84ToGCJ02, ESPG3857ToWGS84 ),\n    }\n}\n\nexport {\n    WGS84,\n    GCJ02,\n    BD09,\n    EPSG3857,\n}\n","import {\r\n    assert,\r\n    isNumber,\r\n    isArray,\r\n    coordEach,\r\n} from './helper.js'\r\n\r\nimport * as CRS from './crs/index.js'\r\n\r\n/**\r\n * transform\r\n *\r\n * @param {geojson|position} input\r\n * @returns {geojson|position} output\r\n */\r\nexport function transform( input, fromCRS, toCRS ) {\r\n\r\n    assert( !input, 'coordinate is required' );\r\n    assert( !fromCRS, 'original coordinate system is required' );\r\n    assert( !toCRS, 'target coordinate system is required' );\r\n\r\n    const from = CRS[ fromCRS ];\r\n    assert( !from, 'original coordinate system is invalid' );\r\n\r\n    if ( fromCRS === toCRS ) return input;\r\n\r\n    const to = from.to[ toCRS ];\r\n    assert( !to, 'target coordinate system is invalid' );\r\n\r\n    const type = typeof ( input );\r\n    assert( type !== 'string' && type !== 'object', 'coordinate must be an geojson or an array of position' );\r\n\r\n    if ( type === 'string' ) input = JSON.parse( input );\r\n\r\n    let isPosition = false;\r\n    if ( isArray( input ) ) {\r\n        assert( input.length < 2, 'position must be at 2 numbers long' );\r\n        assert( !isNumber( input[ 0 ] ) || !isNumber( input[ 1 ] ), 'position must contain numbers' );\r\n        isPosition = true;\r\n    }\r\n\r\n    let output = null;\r\n    const convert = to;\r\n\r\n    if ( isPosition ) {\r\n        output = convert( input );\r\n    } else {\r\n        coordEach( input, function ( coord ) {\r\n            const newCoord = convert( coord );\r\n            coord[ 0 ] = newCoord[ 0 ];\r\n            coord[ 1 ] = newCoord[ 1 ];\r\n        } );\r\n\r\n        output = input;\r\n    }\r\n\r\n    return output;\r\n}\r\n","import {\r\n    WGS84,\r\n    WGS1984,\r\n    GCJ02,\r\n    BD09,\r\n    EPSG4326,\r\n    EPSG3857,\r\n    EPSG900913,\r\n    Baidu,\r\n    BMap,\r\n    AMap,\r\n    WebMercator\r\n} from './constants.js'\r\n\r\nimport { transform } from './transform.js'\r\n\r\nexport {\r\n    WGS84,\r\n    WGS1984,\r\n    GCJ02,\r\n    BD09,\r\n    EPSG4326,\r\n    EPSG3857,\r\n    EPSG900913,\r\n    Baidu,\r\n    BMap,\r\n    AMap,\r\n    WebMercator,\r\n\r\n    transform\r\n}\r\n\r\nexport default {\r\n    WGS84,\r\n    WGS1984,\r\n    GCJ02,\r\n    BD09,\r\n    EPSG4326,\r\n    EPSG3857,\r\n    EPSG900913,\r\n    Baidu,\r\n    BMap,\r\n    AMap,\r\n    WebMercator,\r\n\r\n    transform\r\n}\r\n"],"names":["WGS84","WGS1984","GCJ02","BD09","EPSG4326","EPSG3857","EPSG900913","Baidu","BMap","AMap","WebMercator","assert","condition","msg","Error","isNumber","num","isNaN","isArray","input","Object","prototype","toString","call","compose","args","arguments","start","length","i","result","apply","coordEach","geojson","callback","excludeWrapCoord","j","k","l","geometry","stopG","coords","geometryMaybeCollection","wrapShrink","coordIndex","isGeometryCollection","type","isFeatureCollection","isFeature","stop","features","featureIndex","geometries","geomIndex","multiFeatureIndex","geometryIndex","coordinates","geomType","sin","Math","cos","sqrt","abs","PI","a","ee","GCJ02ToWGS84","coord","lon","lat","isInChina","wgsLon","wgsLat","tempPoint","WGS84ToGCJ02","dx","dy","d","delta","transformLat","x","y","ret","transformLon","dLon","dLat","radLat","magic","sqrtMagic","undefined","atan2","baiduFactor","BD09ToGCJ02","z","theta","newLon","newLat","GCJ02ToBD09","R2D","D2R","A","MAXEXTENT","ESPG3857ToWGS84","xy","atan","exp","WGS84ToEPSG3857","lonLat","adjusted","log","tan","transform","fromCRS","toCRS","from","CRS","to","JSON","parse","isPosition","output","convert","newCoord"],"mappings":"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"}